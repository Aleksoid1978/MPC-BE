Part A: Preparing the Visual Studio environment

 Visual Studio 2017
  1. Install Visual Studio 2017 v15.5.7 or later (any edition will work fine). During installation, you must select the following components: 
   * Desktop development with C++
     * VC++ 2017 v141 tools
     * Windows SDK 10.0.17763.0
     * Visual C++ ATL support
     * Visual C++ MFC support
  Download URL: https://learn.microsoft.com/en-us/visualstudio/releasenotes/vs2017-relnotes

 Visual Studio 2019
  1. Install Visual Studio 2019 (any edition will work fine). During installation, you must select the following components: 
   * Desktop development with C++
     * MSVC v142 - Build Tools C++ 
     * Windows SDK 10.0.17763.0 or newer (latest).
     * C++ ATL support
     * C++ MFC support
  Download URL: https://learn.microsoft.com/en-us/visualstudio/releases/2019/release-notes

 Visual Studio 2022
  1. Install Visual Studio 2022 (any edition will work fine). During installation, you must select the following components: 
   * Desktop development with C++
     * MSVC v143 - Build Tools C++ 
     * Windows SDK 10.0.18362.0 or newer (latest).
     * C++ ATL support
     * C++ MFC support
  Download URL: https://learn.microsoft.com/en-us/visualstudio/releases/2022/release-notes

Part B: Preparing the GCC environment
 NOTES:
  * If you installed the MSYS/MinGW package in an other directory you will have to use that path in the following steps.

 1. Download and extract "MSYS_MinGW-w64_GCC_1220_x86-x64.7z" to "C:\MSYS" -> https://mpc-be.org/MSYS/MSYS_MinGW-w64_GCC_1220_x86-x64.7z
 2. Create a file named "environments.bat" in the source code folder of MPC-BE (see part D) containing the following entries:
    @ECHO OFF
    SET "MPCBE_MSYS=C:\MSYS"
    SET "MPCBE_MINGW=C:\MSYS\mingw"

Part C: Yasm

Download YASM and save it as yasm.exe in a folder that is included in %PATH%. For example C:\Windows.
    For 64-bit Windows: http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win64.exe (Recommended)
    For 32-bit Windows: http://www.tortall.net/projects/yasm/releases/yasm-1.3.0-win32.exe

 NOTES:
  * Yasm may require Microsoft Visual C++ 2010 redistributable packages. Download it:
    For 64-bit Windows: https://download.microsoft.com/download/A/8/0/A80747C3-41BD-45DF-B505-E9710D2744E0/vcredist_x64.exe (Recommended)
    For 32-bit Windows: https://download.microsoft.com/download/C/6/D/C6D0FD4E-9E53-4897-9B91-836EBA2AACD3/vcredist_x86.exe

Part D: Downloading and compiling the MPC-BE source

1. Use a Git client to checkout MPC-BE's trunk to "C:\repos\MPC-BE" (or anywhere else you like)
    Repository URL: https://github.com/Aleksoid1978/MPC-BE.git
    Git for Windows: https://git-scm.com/download/win
    The recommended Git client is TortoiseGit (https://tortoisegit.org/download/)
2. When using TortoiseGit
    a) Navigate to the folder where you want to place the local copy of the repository (e.g: C:\repos)
    b) Right-click on that directory and choose "Git Clone".
    c) Put https://github.com/Aleksoid1978/MPC-BE.git in "URL" and press OK.
    d) Wait for the source tree to be downloaded.
   When usin Git client
    a) open cmd/terminal, cd "c:\repos"
    b) run command "git clone --recursive https://github.com/Aleksoid1978/MPC-BE.git"
    c) Wait for the source tree to be downloaded.

3. Open folder "C:\repos\MPC-BE"
   Execute the batch file update_gcc.bat (it is necessary to do to copy the files libgcc.a and libmingwex.a, in the folders "lib" and "lib64")
4. Open the solution file: C:\repos\MPC-BE\mpc-be.sln 
   Change the solution's configuration to "Release" (in the toolbar).

5. Press OK to save the changes and close the Properties window.
6. Press F7 to build the solution.
7. You now have mpc-be.exe under C:\repos\MPC-BE\_bin\mpc-be_x86
8. Open the solution file C:\repos\MPC-BE\mpciconlib.sln
9. Press F7 to build the solution.
10. You now have mpciconlib.dll under C:\repos\MPC-BE\_bin\mpc-be_x86
11. Open the solution file C:\repos\MPC-BE\mpcresources.sln
    In Visual Studio go to Build->Batch Build->Press Select All->Press Build
12. You now have mpcresources.XX.dll under C:\repos\MPC-BE\_bin\mpc-be_x86\Lang

Alternatively, you can use build.bat (run: build.bat help for more info)


Part D: Building the installer

1. Download Inno Setup 6.2.2 or never (https://jrsoftware.org/isdl.php)
2. Install everything and then go to C:\repos\MPC-BE\distrib, open mpc-be_setup.iss with Inno Setup and compile it.
